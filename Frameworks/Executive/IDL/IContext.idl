cpp_quote("/* Executive Microkernel");
cpp_quote(" * IContext.idl");
cpp_quote(" *   Represents a scheduling context");
cpp_quote(" */");
cpp_quote("");
cpp_quote("/* Copyright 2015-2022 Mo McRoberts.");
cpp_quote(" *");
cpp_quote(" *");
cpp_quote(" *  Licensed under the Apache License, Version 2.0 (the \"License\");");
cpp_quote(" *  you may not use this file except in compliance with the License.");
cpp_quote(" *  You may obtain a copy of the License at");
cpp_quote(" *");
cpp_quote(" *      http://www.apache.org/licenses/LICENSE-2.0");
cpp_quote(" *");
cpp_quote(" *  Unless required by applicable law or agreed to in writing, software");
cpp_quote(" *  distributed under the License is distributed on an \"AS IS\" BASIS,");
cpp_quote(" *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.");
cpp_quote(" *  See the License for the specific language governing permissions and");
cpp_quote(" *  limitations under the License.");
cpp_quote(" */");

import "IObject.idl";
import "IRegion.idl";
import "IRegionHolder.idl";
import "IContext.idl";

[
	local,
	object,
	uuid(5bd135fc-3380-4b6b-9d6c-86da269897bb),
	pointer_default(unique),
	cheader("Executive/IContext.h")
]
interface IContext: IObject
{
	cpp_quote("#ifndef W_NO_UNSTABLE_INTERFACES");
	cpp_quote("# warning The IContext interface is currently considered unstable; source and binary compatibility is not assured.");
	cpp_quote("#endif");

	bool swap(IContext *other);
}
